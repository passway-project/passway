{
  "name": "@passway/project",
  "version": "0.0.0",
  "description": "Secure user authentication and cloud storage",
  "scripts": {
    "build": "dotenvx run -f .env -- docker compose -f compose.yml up --build --no-start",
    "build:dev": "dotenvx run -f .env -- docker compose -f compose.yml -f compose.dev.yml up --build --no-start",
    "start": "dotenvx run -f .env -- docker compose up --detach",
    "start:dev": "UID=$(id -u) GID=$(id -g) dotenvx run -f .env -- docker compose -f compose.yml -f compose.dev.yml up --detach",
    "start:integration": "dotenvx run -f .env -- docker compose -f compose.yml -f compose.integration-test.yml -p int up --build --detach",
    "stop": "docker compose down",
    "stop:dev": "UID=$(id -u) GID=$(id -g) docker compose -f compose.yml -f compose.dev.yml down",
    "stop:integration": "docker compose -f compose.yml -f compose.integration-test.yml -p int down --volumes",
    "destroy": "docker compose down --volumes",
    "restart": "npm run stop && npm start",
    "restart:dev": "npm run stop:dev && npm run start:dev",
    "format": "prettier \"**/*.{ts,js,mjs}\" --write && npm run lint:fix",
    "lint": "eslint . --ext .ts",
    "lint:fix": "npm run lint -- --fix",
    "test": "npm run test:api && npm run test:sdk",
    "test:api": "npm run api:as-root -- npm test -- --run --coverage",
    "test:sdk": "npm run sdk:as-root -- npm test -- --run --coverage",
    "test:debug": "run-p test:debug:api test:debug:sdk",
    "test:debug:api": "npm run api -- npm run test:debug",
    "test:debug:sdk": "npm run sdk -- npm run test:debug",
    "test:watch": "mprocs \"npm run api -- npm test -- --watch\" \"npm run sdk -- npm run test:watch\"",
    "test:integration": "npm run start:integration && docker compose -p int exec api npx prisma migrate dev && npm run test:integration:execute; exit_code=$? && npm run stop:integration && exit $exit_code",
    "test:integration:execute": "docker compose -p int exec api npm run test:integration && docker compose -p int exec sdk npm run test:integration",
    "prepare": "husky && npm run build && npm start && npm run db:migrate:dev",
    "api": "docker compose exec --user $(id -u):$(id -g) api",
    "api:as-root": "docker compose exec api",
    "sdk": "docker compose exec --user $(id -u):$(id -g) sdk",
    "sdk:as-root": "docker compose exec sdk",
    "content-store": "docker compose exec --user $(id -u):$(id -g) content-store",
    "content-store:as-root": "docker compose exec content-store",
    "db:migrate:dev": "npm run api -- npx prisma migrate dev",
    "db:migrate:prod": "npm run api -- npx prisma migrate deploy",
    "check:types": "npm run api -- npm run check:types && npm run sdk -- npm run generate:types && npm run sdk -- npm run check:types",
    "enter:api": "npm run api -- /bin/sh",
    "enter:sdk": "npm run sdk -- /bin/sh"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/passway-project/passway.git"
  },
  "author": "",
  "license": "FSL",
  "bugs": {
    "url": "https://github.com/passway-project/passway/issues"
  },
  "homepage": "https://github.com/passway-project/passway#readme",
  "devDependencies": {
    "@dotenvx/dotenvx": "^1.14.0",
    "@typescript-eslint/eslint-plugin": "^7.16.0",
    "@typescript-eslint/parser": "^7.16.0",
    "eslint": "^8.57.0",
    "eslint-config-prettier": "^9.1.0",
    "eslint-plugin-import": "^2.29.1",
    "eslint-plugin-prettier": "^5.1.3",
    "husky": "^9.0.11",
    "mprocs": "^0.7.1",
    "npm-run-all": "^4.1.5",
    "prettier": "^3.3.3",
    "pretty-quick": "^4.0.0"
  }
}
